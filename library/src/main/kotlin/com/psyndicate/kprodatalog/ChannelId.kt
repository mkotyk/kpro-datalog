package com.psyndicate.kprodatalog

import com.psyndicate.kprodatalog.ChannelBase.*

enum class ChannelBase(val base: Int) {
    CID_Unknown(0x0000),
    CID_Engine(0x0100),
    CID_VTEC(0x0200),
    CID_Lambda(0x0300),
    CID_Knock(0x0400),
    CID_Inputs(0x0500),
    CID_Outputs(0x0600),
    CID_ECU(0x0700),
    CID_Nitrous(0x0800),
    CID_Analog(0x0900),
    CID_TractionControl(0x0A00),
    CID_Misc(0x0B00)
}

operator fun ChannelBase.plus(offset: Int) = this.base + offset

enum class ChannelId(val value: Int) {
    // Vehicle / engine
    CID_RPM(CID_Engine + 0x00),
    CID_Speed(CID_Engine + 0x01),
    CID_Gear(CID_Engine + 0x02),
    CID_MAP(CID_Engine + 0x10),
    CID_MAPVoltage(CID_Engine + 0x11),
    CID_AFMVoltage(CID_Engine + 0x12),
    CID_AFMFlow(CID_Engine + 0x13),
    CID_BP(CID_Engine + 0x14),
    CID_BPCMD(CID_Engine + 0x15),
    CID_AirCharge(CID_Engine + 0x16),
    CID_AFMFreq(CID_Engine + 0x17),
    CID_TPS(CID_Engine + 0x20),
    CID_TPSVoltage(CID_Engine + 0x21),
    CID_ThrottlePlate(CID_Engine + 0x22),
    CID_Inj(CID_Engine + 0x30),
    CID_InjPhase(CID_Engine + 0x31),
    CID_Duty(CID_Engine + 0x32),
    CID_Inj_2(CID_Engine + 0x33),
    CID_Ign(CID_Engine + 0x40),
    CID_IgnDwell(CID_Engine + 0x41),
    CID_IAT(CID_Engine + 0x50),
    CID_IAT_2(CID_Engine + 0x51),
    CID_ECT(CID_Engine + 0x60),
    CID_ECT2(CID_Engine + 0x61),
    CID_ECTCorrection(CID_Engine + 0x62),
    CID_IATCorrection(CID_Engine + 0x63),
    CID_PA(CID_Engine + 0x70),
    CID_BatteryVoltage(CID_Engine + 0x80),
    CID_FuelPressureCmd(CID_Engine + 0x90),
    CID_FuelPressure(CID_Engine + 0x91),
    CID_FuelDuty(CID_Engine + 0x92),
    CID_OilPressure(CID_Engine + 0x98),
    CID_WasteGateCMD(CID_Engine + 0xA0),
    CID_WasteGate(CID_Engine + 0xA1),

    // VTEC/VTC
    CID_VTS(CID_VTEC + 0x00),
    CID_VTP(CID_VTEC + 0x01),
    CID_VTC_Cmd(CID_VTEC + 0x10),
    CID_VTC_Actual(CID_VTEC + 0x11),
    CID_VTC_Duty(CID_VTEC + 0x12),
    CID_VTC_Phase(CID_VTEC + 0x13),
    CID_EXVTC_Cmd(CID_VTEC + 0x14),
    CID_EXVTC_Actual(CID_VTEC + 0x15),

    // Lambda
    CID_O2A_V(CID_Lambda + 0x00),
    CID_O2A_C(CID_Lambda + 0x01),
    CID_O2A_Heat(CID_Lambda + 0x02),
    CID_O2A_Heat_R(CID_Lambda + 0x03),
    CID_O2B_V(CID_Lambda + 0x10),
    CID_O2B_Heat(CID_Lambda + 0x11),
    CID_Lambda_Lambda(CID_Lambda + 0x20),
    CID_Corr_Lambda(CID_Lambda + 0x21),
    CID_Target_Lambda(CID_Lambda + 0x22),
    CID_Lambda_Lambda_2(CID_Lambda + 0x23),
    CID_Target_Lambda_2(CID_Lambda + 0x24),
    CID_Wideband_V(CID_Lambda + 0x28),
    CID_Wideband_Lambda(CID_Lambda + 0x29),
    CID_ShortTermTrim(CID_Lambda + 0x30),
    CID_MedTermTrim(CID_Lambda + 0x31),
    CID_LongTermTrim(CID_Lambda + 0x32),
    CID_ShortTermTrim_2(CID_Lambda + 0x33),
    CID_LongTermTrim_2(CID_Lambda + 0x34),
    CID_ClosedLoopStatus(CID_Lambda + 0x40),
    CID_ClosedLoopStatus_2(CID_Lambda + 0x41),

    // Knock
    CID_KnockLevel(CID_Knock + 0x00),
    CID_KnockVoltage(CID_Knock + 0x01),
    CID_KnockThreshold(CID_Knock + 0x02),
    CID_KnockRetard(CID_Knock + 0x10),
    CID_KnockLimit(CID_Knock + 0x11),
    CID_KnockControl(CID_Knock + 0x12),
    CID_KnockCount(CID_Knock + 0x20),
    CID_KnockCount1(CID_Knock + 0x21),
    CID_KnockCount2(CID_Knock + 0x22),
    CID_KnockCount3(CID_Knock + 0x23),
    CID_KnockCount4(CID_Knock + 0x24),
    CID_KnockCount5(CID_Knock + 0x25),
    CID_KnockCount6(CID_Knock + 0x26),
    CID_KnockRetard1(CID_Knock + 0x30),
    CID_KnockRetard2(CID_Knock + 0x31),
    CID_KnockRetard3(CID_Knock + 0x32),
    CID_KnockRetard4(CID_Knock + 0x33),

    // Inputs
    CID_ACSwitch(CID_Inputs + 0x01),
    CID_SCS(CID_Inputs + 0x02),
    CID_BrakeSwitch(CID_Inputs + 0x03),
    CID_ClutchIn(CID_Inputs + 0x04),
    CID_PSP(CID_Inputs + 0x05),
    CID_ELD_Voltage(CID_Inputs + 0x06),
    CID_ELD_Current(CID_Inputs + 0x07),

    // Outputs
    CID_ACClutch(CID_Outputs + 0x01),
    CID_CheckEngine(CID_Outputs + 0x02),
    CID_FuelPump(CID_Outputs + 0x03),
    CID_ReverseLock(CID_Outputs + 0x04),
    CID_AltControl(CID_Outputs + 0x05),
    CID_IAB(CID_Outputs + 0x06),
    CID_RadFan(CID_Outputs + 0x07),

    // ECU
    CID_Datalogging(CID_ECU + 0x00),
    CID_SecondaryTables(CID_ECU + 0x01),
    CID_SecondaryInjector(CID_ECU + 0x02),
    CID_RevLimiter(CID_ECU + 0x10),
    CID_IgnitionCut(CID_ECU + 0x11),
    CID_BoostCut(CID_ECU + 0x12),
    CID_LaunchCut(CID_ECU + 0x13),
    CID_LaunchRetard(CID_ECU + 0x14),
    CID_ShiftCut(CID_ECU + 0x15),
    CID_PurgeDuty(CID_ECU + 0x20),
    CID_PurgeOpen(CID_ECU + 0x21),
    CID_BoostControl_Duty(CID_ECU + 0x30),
    CID_FTP(CID_ECU + 0x40),

    // Nitrous
    CID_Nitrous1Arm(CID_Nitrous + 0x00),
    CID_Nitrous1On(CID_Nitrous + 0x01),
    CID_Nitrous2Arm(CID_Nitrous + 0x10),
    CID_Nitrous2On(CID_Nitrous + 0x11),
    CID_Nitrous3Arm(CID_Nitrous + 0x20),
    CID_Nitrous3On(CID_Nitrous + 0x21),

    // Analog / Digital

    CID_AnalogInput1(CID_Analog + 0x00),
    CID_AnalogInput2(CID_Analog + 0x01),
    CID_AN0(CID_Analog + 0x10),
    CID_AN1(CID_Analog + 0x11),
    CID_AN2(CID_Analog + 0x12),
    CID_AN3(CID_Analog + 0x13),
    CID_AN4(CID_Analog + 0x14),
    CID_AN5(CID_Analog + 0x15),
    CID_AN6(CID_Analog + 0x16),
    CID_AN7(CID_Analog + 0x17),
    CID_DI0(CID_Analog + 0x20),
    CID_DI1(CID_Analog + 0x21),
    CID_DI2(CID_Analog + 0x22),
    CID_DI3(CID_Analog + 0x23),
    CID_DI4(CID_Analog + 0x24),
    CID_DI5(CID_Analog + 0x25),
    CID_DI6(CID_Analog + 0x26),
    CID_DI7(CID_Analog + 0x27),

    // Traction control
    CID_TC_Speed_LF(CID_TractionControl + 0x00),
    CID_TC_Speed_RF(CID_TractionControl + 0x01),
    CID_TC_Speed_LR(CID_TractionControl + 0x02),
    CID_TC_Speed_RR(CID_TractionControl + 0x03),
    CID_TC_Slip(CID_TractionControl + 0x10),
    CID_TC_Turn(CID_TractionControl + 0x11),
    CID_TC_OverSlip(CID_TractionControl + 0x12),
    CID_TC_Output(CID_TractionControl + 0x20),
    CID_TC_Volts(CID_TractionControl + 0x21),
    CID_TC_Retard(CID_TractionControl + 0x30),
    CID_TC_RevLimiter(CID_TractionControl + 0x31),

    // Misc
    CID_FuelLevel(CID_Misc + 0x00),
    CID_FuelEconomy(CID_Misc + 0x01),
    CID_FuelUsed(CID_Misc + 0x02),
    CID_EthanolContent(CID_Misc + 0x03),
    CID_FuelTemp(CID_Misc + 0x04),
    CID_ABS_Speed_LF(CID_Misc + 0x05),
    CID_ABS_Speed_RF(CID_Misc + 0x06),
    CID_ABS_Speed_LR(CID_Misc + 0x07),
    CID_ABS_Speed_RR(CID_Misc + 0x08),
    CID_SteeringAngle(CID_Misc + 0x10),
    CID_SteeringTorque(CID_Misc + 0x11),
    CID_BrakePressure(CID_Misc + 0x12),
    CID_ClutchPosition(CID_Misc + 0x13),
    CID_GLat(CID_Misc + 0x20),
    CID_GLong(CID_Misc + 0x21),
    CID_YawRate(CID_Misc + 0x22),
}